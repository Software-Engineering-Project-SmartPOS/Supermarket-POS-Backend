extend type Mutation {
    AddSupplier(supplierInput: SupplierInput) : Supplier
    UpdateSupplier(supplierDetail: SupplierInput): Supplier

    CreateBrand(brandInput: BrandInput!): Brand
    UpdateBrand(brandInput : BrandInput): Brand


    CreateCategory(categoryInput: CategoryInput): Category!
    UpdateCategory(categoryInput: CategoryInput): Category!



}
extend type Query{
    GetSupplierById(id:ID!) : Supplier
    GetSupplierByEmail(name: String) : Supplier
    GetAllSuppliers : [Supplier]

    GetBrandById(id: ID!) : Brand
    GetBrandByName(name: String): Brand
    GetAllBrands : [Brand]

    GetCategoryById(id: ID) : Category
    GetCategoryByName(name: String): Category
    GetAllCategories : [Category]!
}

input SupplierInput {
    id: Int # Used when updating supplier details
    name: String
    landPhone: String
    mobilePhone: String
    email: String
    addressId: Int # Used when updating supplier details
    houseNumber: String
    street: String
    city: String
    district: String
    postalCode: String
    active: Boolean
    branchId: Int
}


type Supplier {
    id: Int
    name: String
    landPhone: String
    mobilePhone: String
    email: String
    address: Address
    branchId: Int
    createdBy: Employee
    updatedEmployee: Employee
    createdAt: String
    updatedAt: String
    active: Boolean


}


input CategoryInput {
id: ID
name: String
description: String
}

type Category {
id: ID!
name: String!
description: String
createAt: String
updateAt: String
updatedEmployee: Employee!
updatedDate: String
#itemList: [Item]
}


input BrandInput {
    id: ID   # used when updating the brand
    name: String!
    description: String
}

type Brand {
    id: ID!
    name: String!
    description: String
    updateAt : String
    createAt : String
}


